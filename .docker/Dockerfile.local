################################################################################
# This is a general process and should not be changed.  [START]

FROM php:8.1.13-apache

RUN apt update \
    && apt install -y g++ zip git \
    && apt install -y zlib1g-dev libicu-dev libzip-dev libonig-dev libpng-dev \
    && apt install curl build-essential openssl libssl-dev \
    && docker-php-ext-install intl opcache \
    && docker-php-ext-install pdo mysqli pdo_mysql \
    && pecl install apcu \
    && docker-php-ext-enable apcu \
    && docker-php-ext-configure zip \
    && docker-php-ext-install zip \
    && docker-php-ext-install mbstring \
    && docker-php-ext-install gd \
    && docker-php-ext-install iconv \
    && docker-php-ext-enable mbstring \
    && a2enmod rewrite \
    && a2enmod headers \
    && git clone https://github.com/nodejs/node.git \
    && cd node \
    && ./configure \
    && make \
    && sudo make install

WORKDIR /var/www/html

# composer
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer

# This is a general process and should not be changed. [ END ]
################################################################################

# Xdebug for Local Development
RUN pecl install xdebug \
    && docker-php-ext-enable xdebug \
    && echo "xdebug.mode=develop,debug,coverage" >> /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini \
    && echo "xdebug.client_host=host.docker.internal" >> /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini \
    && echo "xdebug.mode=develop,debug,coverage" >> /usr/local/etc/php/conf.d/xdebug.ini


# for Development
ADD ./ /var/www/html
COPY .docker/php/php.ini /usr/local/etc/php/php.ini
COPY .docker/apache/apache2-ci.conf /etc/apache2/apache2.conf
COPY .docker/apache/conf-enabled /etc/apache2/conf-enabled
COPY .docker/apache/mods-enabled /etc/apache2/mods-enabled
COPY .docker/apache/sites-enabled /etc/apache2/sites-enabled

# mail for Local Development
RUN DEBIAN_FRONTEND=noninteractive apt install postfix -y \
    && postconf -e relayhost=mailhog:1025

# Copy .bashrc file for custom aliases
COPY .docker/bash/.bashrc /root/.bashrc

# Ensure read and write access to storage folder
RUN chmod -R 775 ./storage
# Ensure read and write access to bootstrap cache folder
RUN chmod -R 775 ./bootstrap/cache

# Run when docker starts
CMD ["/bin/sh", "-c", "/etc/init.d/postfix start && apache2-foreground"]
